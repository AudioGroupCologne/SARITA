% dependencies:
% aktools, sfs, sofia, sfe 
% generate configs for VST plugin
clear; 
close all; 
clc;

addpath(genpath('../../dependencies'));
addpath('../../SARITA_code');

src_grids = {'zylia', ''}
%grid_type = 'Lebedev';
grid_type = 'zylia';%'fliege';
grid_type_ups = 'fliege';

N = 3;
N_ups = 10;
N_ups_rendering = N_ups;

fs = 48000;
%audio_sample_name = 'sinus_500';
audio_sample_name = 'drums';

target_grid = sph_grids.get_sampling_grid(grid_type_ups, N_ups);
source_grid = sph_grids.get_sampling_grid(grid_type, N);
    
load(sprintf('streams/SMA_stream_%s_N%d_%s.mat', grid_type, N, audio_sample_name));

if length(drir_stream) > 3.5*fs
    stream_snipped = drir_stream(:, 1*fs:3.5*fs);
else
    stream_snipped = drir_stream;
end
stream_snipped = stream_snipped(:, 1:end-1);
stream_snipped = apply_window(stream_snipped, 8192);

%% so far we need as much source channels as we want output channels ...
% prepare stream for comparative processing in reaper
stream_snipped = [zeros(size(stream_snipped, 1), 2*fs), ...
                  stream_snipped, ...
                  zeros(size(stream_snipped, 1), 2*fs)];

stream_snipped_for_reaper = [stream_snipped; ...
                             zeros(size(target_grid, 1)-size(stream_snipped, 1), size(stream_snipped, 2))];
                         
audiowrite_multi_ch(stream_snipped_for_reaper.', fs, 32, sprintf('debug_ressources/Reaper_stream_%s_N%d_to_%s_N%d_%s.wav', ...
                                                         grid_type, N, grid_type_ups, N_ups, audio_sample_name));

%% perform upsampling of array streams
config.N = N;
config.N_ups = N_ups;
config.radius = radius;
config.source_grid_name = grid_type;
config.path = 'debug_ressources/config_files_for_vst'; 
if ~exist(config.path, 'dir') mkdir(config.path); end

tic
sma_stream_ups = Sarita_upsampling_faster(stream_snipped, source_grid(:, 1:2), target_grid(:, 1:2), radius, ...
                                          'frame_length', 4096, 'frame_overlap', 128, ...
                                          'gen_vst_config', 1, 'config', config);
toc

% stream for evaluating SARITA output
audiowrite_multi_ch(sma_stream_ups.', fs, 32, sprintf('debug_ressources/Matlab_upsampling_%s_N%d_to_%s_N%d_%s.wav', ...
                                                       grid_type, N, grid_type_ups, N_ups, audio_sample_name));

% apply spartas array2sh 
[ambi_sparta, ~] = sparta_array2SH(sma_stream_ups, target_grid(:, 1:2), N_ups_rendering, radius, fs, rf_softlimit);
% export as wav
audiowrite_multi_ch(ambi_sparta.', fs, 32, sprintf('debug_ressources/Matlab_array2sh_%s_N%d_%s.wav', grid_type, N, audio_sample_name));
